// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dibrito/ennismore-weather-app/internal/handler (interfaces: ServiceController)
//
// Generated by this command:
//
//	mockgen -package controller_mock --destination=./gen/mock/controller/controller_mock.go github.com/dibrito/ennismore-weather-app/internal/handler ServiceController
//

// Package controller_mock is a generated GoMock package.
package controller_mock

import (
	context "context"
	reflect "reflect"

	model "github.com/dibrito/ennismore-weather-app/pkg/model"
	gomock "go.uber.org/mock/gomock"
)

// MockServiceController is a mock of ServiceController interface.
type MockServiceController struct {
	ctrl     *gomock.Controller
	recorder *MockServiceControllerMockRecorder
}

// MockServiceControllerMockRecorder is the mock recorder for MockServiceController.
type MockServiceControllerMockRecorder struct {
	mock *MockServiceController
}

// NewMockServiceController creates a new mock instance.
func NewMockServiceController(ctrl *gomock.Controller) *MockServiceController {
	mock := &MockServiceController{ctrl: ctrl}
	mock.recorder = &MockServiceControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceController) EXPECT() *MockServiceControllerMockRecorder {
	return m.recorder
}

// GetCache mocks base method.
func (m *MockServiceController) GetCache() model.CacheResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCache")
	ret0, _ := ret[0].(model.CacheResponse)
	return ret0
}

// GetCache indicates an expected call of GetCache.
func (mr *MockServiceControllerMockRecorder) GetCache() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCache", reflect.TypeOf((*MockServiceController)(nil).GetCache))
}

// GetForecast mocks base method.
func (m *MockServiceController) GetForecast(arg0 context.Context, arg1 []string) (model.WeatherForecast, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetForecast", arg0, arg1)
	ret0, _ := ret[0].(model.WeatherForecast)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetForecast indicates an expected call of GetForecast.
func (mr *MockServiceControllerMockRecorder) GetForecast(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetForecast", reflect.TypeOf((*MockServiceController)(nil).GetForecast), arg0, arg1)
}
