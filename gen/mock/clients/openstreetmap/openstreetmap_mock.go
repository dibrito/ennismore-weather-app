// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dibrito/ennismore-weather-app/internal/controller (interfaces: OpenstreetmapperGateway)
//
// Generated by this command:
//
//	mockgen -package openstreetmap_mock --destination=./gen/mock/clients/openstreetmap/openstreetmap_mock.go github.com/dibrito/ennismore-weather-app/internal/controller OpenstreetmapperGateway
//

// Package openstreetmap_mock is a generated GoMock package.
package openstreetmap_mock

import (
	context "context"
	reflect "reflect"

	model "github.com/dibrito/ennismore-weather-app/pkg/model"
	gomock "go.uber.org/mock/gomock"
)

// MockOpenstreetmapperGateway is a mock of OpenstreetmapperGateway interface.
type MockOpenstreetmapperGateway struct {
	ctrl     *gomock.Controller
	recorder *MockOpenstreetmapperGatewayMockRecorder
}

// MockOpenstreetmapperGatewayMockRecorder is the mock recorder for MockOpenstreetmapperGateway.
type MockOpenstreetmapperGatewayMockRecorder struct {
	mock *MockOpenstreetmapperGateway
}

// NewMockOpenstreetmapperGateway creates a new mock instance.
func NewMockOpenstreetmapperGateway(ctrl *gomock.Controller) *MockOpenstreetmapperGateway {
	mock := &MockOpenstreetmapperGateway{ctrl: ctrl}
	mock.recorder = &MockOpenstreetmapperGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpenstreetmapperGateway) EXPECT() *MockOpenstreetmapperGatewayMockRecorder {
	return m.recorder
}

// GetLocation mocks base method.
func (m *MockOpenstreetmapperGateway) GetLocation(arg0 context.Context, arg1 string) ([]model.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocation", arg0, arg1)
	ret0, _ := ret[0].([]model.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLocation indicates an expected call of GetLocation.
func (mr *MockOpenstreetmapperGatewayMockRecorder) GetLocation(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocation", reflect.TypeOf((*MockOpenstreetmapperGateway)(nil).GetLocation), arg0, arg1)
}
